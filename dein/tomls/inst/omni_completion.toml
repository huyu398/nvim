[[plugins]]
repo = 'Shougo/ddc.vim'
rev = 'v2.2.0'
hook_add = '''
call ddc#custom#patch_global('completionMenu', 'pum.vim')
call ddc#custom#patch_global('sources', ['nvim-lsp', 'around', 'vsnip', 'file'])
call ddc#custom#patch_global('sourceOptions', {
    \ '_': {
    \   'matchers': ['matcher_fuzzy'],
    \   'sorters': ['sorter_fuzzy'],
    \   'converters': ['converter_fuzzy'],
    \   'ignoreCase': v:true,
    \ },
    \ 'around': {'mark': 'A'},
    \ 'file': {
    \   'mark': 'F',
    \   'isVolatile': v:true,
    \   'forceCompletionPattern': '\S/\S*',
    \ },
    \ 'nvim-lsp': {
    \   'mark': 'LSP',
    \   'forceCompletionPattern': '\.\w*|:\w*|->\w*',
    \ },
    \ })

call ddc#custom#patch_global('sourceParams', {
    \ 'around': {'maxSize': 500},
    \ 'file': {'smartCase': v:true},
    \ })

call ddc#custom#patch_filetype(
    \ ['ps1', 'dosbatch', 'autohotkey', 'registry'], {
    \ 'sourceOptions': {
    \   'file': {
    \     'forceCompletionPattern': '\S\\\S*',
    \   },
    \ },
    \ 'sourceParams': {
    \   'file': {
    \     'mode': 'win32',
    \   },
    \ }})

call ddc#enable()
set completeopt-=preview
'''

[[plugins]]
repo = 'Shougo/pum.vim'
rev = 'fc2cf83'
hook_add = '''
inoremap <silent><expr> <TAB>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' : '<TAB>'
inoremap <silent><expr> <S-TAB>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(-1)<CR>' : '<S-TAB>'
inoremap <silent><expr> <C-n>       '<Cmd>call pum#map#insert_relative(+1)<CR>'
inoremap <silent><expr> <C-p>       '<Cmd>call pum#map#insert_relative(-1)<CR>'
inoremap <silent><expr> <C-y>       '<Cmd>call pum#map#confirm()<CR>'
inoremap <silent><expr> <C-e>       '<Cmd>call pum#map#cancel()<CR>'
inoremap <silent><expr> <PageDown>  '<Cmd>call pum#map#insert_relative_page(+1)<CR>'
inoremap <silent><expr> <PageUp>    '<Cmd>call pum#map#insert_relative_page(-1)<CR>'
'''

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'tani/ddc-fuzzy'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_add = '''
let g:vsnip_snippet_dir = fnamemodify($MYVIMRC, ':h') . '/vsnip'

" Expand
imap <silent><expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'
smap <silent><expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'

" Expand or jump
imap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'
smap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'

" Jump forward or backward
" imap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
" smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
" imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
" smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'

" Select or cut text to use as $TM_SELECTED_TEXT in the next snippet.
" See https://github.com/hrsh7th/vim-vsnip/pull/50
" nmap        s   <Plug>(vsnip-select-text)
" xmap        s   <Plug>(vsnip-select-text)
" nmap        S   <Plug>(vsnip-cut-text)
" xmap        S   <Plug>(vsnip-cut-text)

" If you want to use snippet for multiple filetypes, you can `g:vsnip_filetypes` for it.
let g:vsnip_filetypes = {}
let g:vsnip_filetypes.javascriptreact = ['javascript']
let g:vsnip_filetypes.typescriptreact = ['typescript']
'''

[[plugins]]
repo = 'vim-denops/denops.vim'
rev = 'v2.2.0'

[[plugins]]
repo = 'matsui54/denops-signature_help'
hook_add = '''
    call signature_help#enable()

    inoremap <expr><c-d> signature_help#scroll(+4)
    inoremap <expr><c-u> signature_help#scroll(-4)
'''
