[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    inoremap <expr><TAB>    pumvisible() ? "\<C-n>" : "\<TAB>"
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<S-TAB>"
'''

[[plugins]]
repo = 'Shougo/neosnippet'
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
    imap <C-K> <Plug>(neosnippet_expand_or_jump)
    smap <C-K> <Plug>(neosnippet_expand_or_jump)
    xmap <C-K> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
lazy = 1

#[[plugins]]
#repo = 'scrooloose/syntastic'
#on_ft = ['python']

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = [
    '<Plug>(easymotion-f)', '<Plug>(easymotion-F)',
    '<Plug>(easymotion-sn)', '<Plug>(easymotion-next)', '<Plug>(easymotion-prev)',
    '<Plug>(easymotion-lineforward)', '<Plug>(easymotion-j)', '<Plug>(easymotion-k)', '<Plug>(easymotion-linebackward)'
]
hook_add = '''
    map f <Plug>(easymotion-f)
    map F <Plug>(easymotion-F)

    map / <Plug>(easymotion-sn)
    map n <Plug>(easymotion-next)
    map N <Plug>(easymotion-prev)

    map <LEADER>h <Plug>(easymotion-lineforward)
    map <LEADER>j <Plug>(easymotion-j)
    map <LEADER>k <Plug>(easymotion-k)
    map <LEADER>l <Plug>(easymotion-linebackward)
'''
hook_source = '''
    set nohlsearch
    let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 't9md/vim-choosewin'
on_map = ['<Plug>(choosewin)']
hook_add = '''
    nmap - <Plug>(choosewin)
'''
hook_source = '''
    let g:choosewin_overlay_enable = 1

    let g:choosewin_blink_on_land = 0
    let g:choosewin_statusline_replace = 0
    let g:choosewin_tabline_replace = 0
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle']
depends = ['nerdtree-git-plugin']
hook_add = '''
    nnoremap <silent> <C-T>      :NERDTreeToggle<CR>
    vnoremap <silent> <C-T> <ESC>:NERDTreeToggle<CR>
    onoremap <silent> <C-T>      :NERDTreeToggle<CR>
    inoremap <silent> <C-T> <ESC>:NERDTreeToggle<CR>
    cnoremap <silent> <C-T> <C-U>:NERDTreeToggle<CR>
    let g:NERDTreeShowHidden = 1
    let g:NERDTreeShowBookmarks = 1
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
'''

[[plugins]]
repo = 'huyu398/nerdtree-git-plugin'
lazy = 1
hook_source = '''
    let g:NERDTreeIndicatorMapCustom = {
        \ "Modified"  : "+",
        \ "Staged"    : "*",
        \ "Untracked" : "✭",
        \ "Renamed"   : "➜",
        \ "Unmerged"  : "═",
        \ "Deleted"   : "x",
        \ "Dirty"     : "✗",
        \ "Clean"     : "✔︎",
        \ "Unknown"   : "?"
        \ }
'''

[[plugins]]
repo = 'osyo-manga/vim-over'
on_cmd = ['OverCommandLine']
hook_add = '''
    nnoremap <silent> <LEADER>m :OverCommandLine<ENTER>%s/
'''

[[plugins]]
repo = 't9md/vim-quickhl'
on_map = ['<Plug>(quickhl-manual-this)', '<Plug>(quickhl-manual-reset)']
hook_add = '''
    nmap <Space>m <Plug>(quickhl-manual-this)
    xmap <Space>m <Plug>(quickhl-manual-this)
    nmap <Space>M <Plug>(quickhl-manual-reset)
    xmap <Space>M <Plug>(quickhl-manual-reset)
'''
