[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    inoremap <expr><TAB>    pumvisible() ? "\<C-n>" : "\<TAB>"
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<S-TAB>"
'''

[[plugins]]
repo = 'Shougo/neosnippet'
on_i = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']
hook_source = '''
    imap <C-K> <Plug>(neosnippet_expand_or_jump)
    smap <C-K> <Plug>(neosnippet_expand_or_jump)
    xmap <C-K> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
lazy = 1

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = [
    '<Plug>(easymotion-f)', '<Plug>(easymotion-F)',
    '<Plug>(easymotion-sn)', '<Plug>(easymotion-next)', '<Plug>(easymotion-prev)',
    '<Plug>(easymotion-lineforward)', '<Plug>(easymotion-j)', '<Plug>(easymotion-k)', '<Plug>(easymotion-linebackward)'
]
hook_add = '''
    map f <Plug>(easymotion-f)
    map F <Plug>(easymotion-F)

    map / <Plug>(easymotion-sn)
    map n <Plug>(easymotion-next)
    map N <Plug>(easymotion-prev)

    map <LEADER>h <Plug>(easymotion-lineforward)
    map <LEADER>j <Plug>(easymotion-j)
    map <LEADER>k <Plug>(easymotion-k)
    map <LEADER>l <Plug>(easymotion-linebackward)
'''
hook_source = '''
    set nohlsearch
    let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 't9md/vim-choosewin'
on_map = ['<Plug>(choosewin)']
hook_add = '''
    nmap - <Plug>(choosewin)
'''
hook_source = '''
    let g:choosewin_overlay_enable = 1

    let g:choosewin_blink_on_land = 0
    let g:choosewin_statusline_replace = 0
    let g:choosewin_tabline_replace = 0
'''
